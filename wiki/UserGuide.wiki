#summary User guide for downloading, installing, and using Hackystat Eclipse Sensor
#labels Featured

= 1.0 Introduction =

This User Guide provides instructions on how to install, configure, and run the Hackystat Eclipse sensor. The Eclipse sensor collects sensor data regarding developer activities using the Eclipse IDE. In the following table, the bold-faced column names are the sensor data property names.

|| *Tool*   || *!SensorDataType* || *Type* || *Subtype* || Description ||
||Eclipse || !DevEvent || Edit || !StateChange || Generated when the active buffer has changed.||
||Eclipse ||!DevEvent || Edit || !OpenFile || Generated when a new file is opened.||
||Eclipse ||!DevEvent || Edit || !SaveFile || Generated when the current file is saved.||
||Eclipse ||!DevEvent || Edit || !CloseFile || Generated when the current file is closed.||
||Eclipse ||!DevEvent || Edit || Exit || Generated when Eclipse is exited.||
||Eclipse ||!DevEvent || Edit || !ProgramUnit(Add) || Generated when adding a new program construct such as an import statement, class, field, or method.||
||Eclipse ||!DevEvent || Edit || !ProgramUnit(Rename) || Generated when renaming a program construct.||
||Eclipse ||!DevEvent || Edit || !ProgramUnit(Remove) || Generated when removing a program construct.||
||Eclipse ||!DevEvent || Edit || !ProgramUnit(Move) || Generated when moving a program construct from one location to another.||
||Eclipse ||!DevEvent || Build || Compile || Generated when build fails.||
||Eclipse ||!DevEvent || Debug || Breakpoint(Set/Unset) || Generated when a breakpoint is set/unset.||
||Eclipse ||!DevEvent || Debug || Start || Generated when starting a debugging session.||
||Eclipse ||!DevEvent || Debug || !StepInto || Generated when stepping into a code block.||
||Eclipse ||!DevEvent || Debug || !StepOver || Generated when stepping over a code block.||
||Eclipse ||!DevEvent || Debug || Terminate || Generated when terminating a debugging session.||

The Resource property of a Sensor Data entry is the file attached to the active buffer.

= 2.0 Installation =

This section describes how to install the Hackystat Eclipse Sensor using Eclipse's update manager.

== 2.1 Eclipse ==

This sensor is compatible with Eclipse 3.2 and 3.3. You will use the *Feature Update Manager* to install the sensor. 

== 2.2 Feature Installation ==

  # Select the menu Help | Software Update | Find and Install.  Eclipse will display the *Feature Updates* window. 
  # Check *Search for new features to install* and click the *Next* button. 
  # Click the *New Remote Site ...* button in the *Update sites to visit* window.
  # In the *New Update Site* window, enter _Hackystat Eclipse Sensor_ as the site name and _http://hackystat-sensor-eclipse.googlecode.com/svn/trunk/site/site.xml_ as the site URL.  
  # Click *OK* button to confirm the entered information.
  # Click the *Finish* button. Eclipse will then automatically locate the _Hackystat Eclipse Sensor_ for you to install.
  # Install Hackystat Eclipse Sensor using the *Update Manager*. 

= 3.0 Sensor Configuration =

== Sensor Settings ==
You will need to provide a Hackystat !SensorBase host, a user email and its associated password in the Preference Settings for the Hackystat Eclipse Sensor. Go to the Window | Preferences menu of Eclipse, and you should see a Preference page for the Hackystat Eclipse Sensor as illustrated in the following figure: 

http://hackystat-sensor-eclipse.googlecode.com/svn/trunk/images/EclipseSensorPreference.jpg

The Hackystat Eclipse Sensor will check the validity of your input after you click the *Apply* and/or *OK* buttons. The new preferences will take effect right away. 

To confirm that data is being received by the !SensorBase, we recommend the use of the [http://code.google.com/p/hackystat-ui-sensordataviewer/ Sensor Data Viewer].