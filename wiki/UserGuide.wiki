#summary User guide for downloading, installing, and using Hackystat Eclipse Sensor
#labels Featured

= 1.0 Introduction =

This User Guide provides instructions on how to install, configure, and run the Hackystat Eclipse sensor. The Eclipse sensor collects sensor data regarding developer activities using the Eclipse IDE. In the following table, the bold-faced column names are the sensor data property names.

|| *Tool*   || *!SensorDataType* || *Type* || *Subtype* || Description ||
||Eclipse || !DevEvent || Edit || !StateChange || Generated when the active buffer has changed.||
||Eclipse ||!DevEvent || Edit || !OpenFile || Generated when a new file is opened.||
||Eclipse ||!DevEvent || Edit || !SaveFile || Generated when the current file is saved.||
||Eclipse ||!DevEvent || Edit || !CloseFile || Generated when the current file is closed.||
||Eclipse ||!DevEvent || Edit || Exit || Generated when Eclipse is exited.||
||Eclipse ||!DevEvent || Edit || !ProgramUnit(Add) || Generated when adding a new program construct such as an import statement, class, field, or method.||
||Eclipse ||!DevEvent || Edit || !ProgramUnit(Rename) || Generated when renaming a program construct.||
||Eclipse ||!DevEvent || Edit || !ProgramUnit(Remove) || Generated when removing a program construct.||
||Eclipse ||!DevEvent || Edit || !ProgramUnit(Move) || Generated when moving a program construct from one location to another.||
||Eclipse ||!DevEvent || Build || Compile || Generated when build fails.||
||Eclipse ||!DevEvent || Debug || Breakpoint(Set/Unset) || Generated when a breakpoint is set/unset.||
||Eclipse ||!DevEvent || Debug || Start || Generated when starting a debugging session.||
||Eclipse ||!DevEvent || Debug || !StepInto || Generated when stepping into a code block.||
||Eclipse ||!DevEvent || Debug || !StepOver || Generated when stepping over a code block.||
||Eclipse ||!DevEvent || Debug || Terminate || Generated when terminating a debugging session.||

The Resource property of a Sensor Data entry is the file attached to the active buffer.

= 2.0 Installation =

This sensor is compatible with Eclipse 3.3 only. 

  # Download the plugin release from the home page.
  # Copy the jar file (say org.hackystat.sensor.eclipse_8.0.v20071007.jar) to <ECLIPSE_HOME>/plugins folder.

= 3.0 Sensor Configuration =

== Sensor Settings ==

You will need to provide a Hackystat !SensorBase host, a !SensorBase account (i.e. email address), and a password in the Preference Settings for the Hackystat Eclipse Sensor. This generally involves registering with a !SensorBase host.  Contact your Hackystat administrator if you are unclear on how to do this. 

Once you have these three items of information, select the Window | Preferences menu, then select "Hackystat Sensor"  to display its Preference page, as illustrated below:

http://hackystat-sensor-eclipse.googlecode.com/svn/trunk/images/EclipseSensorPreference.jpg

The Hackystat Eclipse Sensor will check the validity of your input after you click the *Apply* and/or *OK* buttons. The new preferences will take effect the next time you start up Eclipse.  Note that the Eclipse sensor buffers data locally, so you will not see the data sent immediately to the !SensorBase host. To guarantee transmission, exit Eclipse. 

To confirm that data is being received by the !SensorBase, we recommend the use of the [http://code.google.com/p/hackystat-ui-sensordataviewer/ Sensor Data Viewer].
 
 